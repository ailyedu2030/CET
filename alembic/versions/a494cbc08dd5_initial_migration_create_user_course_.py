"""Initial migration: Create user, course and training models

Revision ID: a494cbc08dd5
Revises:
Create Date: 2025-08-19 23:02:56.096568

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op  # type: ignore[attr-defined]

# revision identifiers, used by Alembic.
revision: str = "a494cbc08dd5"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=50), nullable=False, comment="用户名"),
        sa.Column("email", sa.String(length=100), nullable=False, comment="邮箱地址"),
        sa.Column(
            "password_hash", sa.String(length=255), nullable=False, comment="密码哈希值"
        ),
        sa.Column(
            "user_type",
            sa.Enum("ADMIN", "TEACHER", "STUDENT", name="usertype"),
            nullable=False,
            comment="用户类型",
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否激活"),
        sa.Column("is_verified", sa.Boolean(), nullable=False, comment="是否已验证"),
        sa.Column(
            "last_login",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="最后登录时间",
        ),
        sa.Column("login_count", sa.Integer(), nullable=False, comment="登录次数"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_user_type"), "users", ["user_type"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "courses",
        sa.Column("name", sa.String(length=200), nullable=False, comment="课程名称"),
        sa.Column("description", sa.Text(), nullable=True, comment="课程描述"),
        sa.Column("code", sa.String(length=50), nullable=True, comment="课程编码"),
        sa.Column("syllabus", sa.JSON(), nullable=False, comment="教学大纲"),
        sa.Column("teaching_plan", sa.JSON(), nullable=False, comment="教学计划"),
        sa.Column("resource_config", sa.JSON(), nullable=False, comment="资源配置"),
        sa.Column("status", sa.String(length=20), nullable=False, comment="课程状态"),
        sa.Column("total_hours", sa.Integer(), nullable=True, comment="总学时"),
        sa.Column(
            "target_audience", sa.String(length=200), nullable=True, comment="适用对象"
        ),
        sa.Column(
            "difficulty_level",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                name="difficultylevel",
            ),
            nullable=False,
            comment="难度等级",
        ),
        sa.Column("version", sa.String(length=20), nullable=False, comment="课程版本"),
        sa.Column(
            "parent_course_id", sa.Integer(), nullable=True, comment="模板课程ID"
        ),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="审核者ID"),
        sa.Column(
            "approved_at", sa.DateTime(timezone=True), nullable=True, comment="审核时间"
        ),
        sa.Column("student_count", sa.Integer(), nullable=False, comment="学生人数"),
        sa.Column("completion_rate", sa.Float(), nullable=False, comment="完成率"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_course_id"],
            ["courses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_index(op.f("ix_courses_name"), "courses", ["name"], unique=False)
    op.create_index(op.f("ix_courses_status"), "courses", ["status"], unique=False)
    op.create_table(
        "question_batches",
        sa.Column("name", sa.String(length=200), nullable=False, comment="批次名称"),
        sa.Column("description", sa.Text(), nullable=True, comment="批次描述"),
        sa.Column(
            "training_type",
            sa.Enum(
                "VOCABULARY",
                "LISTENING",
                "READING",
                "WRITING",
                "TRANSLATION",
                "GRAMMAR",
                "COMPREHENSIVE",
                name="trainingtype",
            ),
            nullable=False,
            comment="训练类型",
        ),
        sa.Column(
            "difficulty_level",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                name="difficultylevel",
            ),
            nullable=False,
            comment="难度等级",
        ),
        sa.Column("question_count", sa.Integer(), nullable=False, comment="题目数量"),
        sa.Column(
            "time_limit", sa.Integer(), nullable=True, comment="时间限制（分钟）"
        ),
        sa.Column(
            "knowledge_points", sa.JSON(), nullable=False, comment="涵盖的知识点"
        ),
        sa.Column("tags", sa.JSON(), nullable=False, comment="批次标签"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否启用"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_question_batches_training_type"),
        "question_batches",
        ["training_type"],
        unique=False,
    )
    op.create_table(
        "questions",
        sa.Column(
            "question_type",
            sa.Enum(
                "MULTIPLE_CHOICE",
                "FILL_BLANK",
                "TRUE_FALSE",
                "SHORT_ANSWER",
                "ESSAY",
                "LISTENING_COMPREHENSION",
                "READING_COMPREHENSION",
                "TRANSLATION_EN_TO_CN",
                "TRANSLATION_CN_TO_EN",
                name="questiontype",
            ),
            nullable=False,
            comment="题目类型",
        ),
        sa.Column(
            "training_type",
            sa.Enum(
                "VOCABULARY",
                "LISTENING",
                "READING",
                "WRITING",
                "TRANSLATION",
                "GRAMMAR",
                "COMPREHENSIVE",
                name="trainingtype",
            ),
            nullable=False,
            comment="训练类型",
        ),
        sa.Column("title", sa.String(length=500), nullable=False, comment="题目标题"),
        sa.Column("content", sa.JSON(), nullable=False, comment="题目内容"),
        sa.Column(
            "difficulty_level",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                name="difficultylevel",
            ),
            nullable=False,
            comment="难度等级",
        ),
        sa.Column("max_score", sa.Float(), nullable=False, comment="满分分数"),
        sa.Column("time_limit", sa.Integer(), nullable=True, comment="时间限制（秒）"),
        sa.Column("knowledge_points", sa.JSON(), nullable=False, comment="知识点标签"),
        sa.Column("tags", sa.JSON(), nullable=False, comment="题目标签"),
        sa.Column("correct_answer", sa.JSON(), nullable=False, comment="正确答案"),
        sa.Column("answer_analysis", sa.Text(), nullable=True, comment="答案解析"),
        sa.Column("grading_criteria", sa.JSON(), nullable=False, comment="评分标准"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否启用"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column("usage_count", sa.Integer(), nullable=False, comment="使用次数"),
        sa.Column("average_score", sa.Float(), nullable=False, comment="平均分数"),
        sa.Column("correct_rate", sa.Float(), nullable=False, comment="正确率"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_questions_difficulty_level"),
        "questions",
        ["difficulty_level"],
        unique=False,
    )
    op.create_index(
        op.f("ix_questions_question_type"), "questions", ["question_type"], unique=False
    )
    op.create_index(
        op.f("ix_questions_training_type"), "questions", ["training_type"], unique=False
    )
    op.create_table(
        "registration_applications",
        sa.Column("user_id", sa.Integer(), nullable=False, comment="申请用户ID"),
        sa.Column("reviewer_id", sa.Integer(), nullable=True, comment="审核员ID"),
        sa.Column(
            "application_type",
            sa.Enum("ADMIN", "TEACHER", "STUDENT", name="usertype"),
            nullable=False,
            comment="申请类型",
        ),
        sa.Column("application_data", sa.JSON(), nullable=False, comment="申请数据"),
        sa.Column(
            "submitted_documents", sa.JSON(), nullable=False, comment="提交的文件列表"
        ),
        sa.Column("status", sa.String(length=20), nullable=False, comment="申请状态"),
        sa.Column("review_notes", sa.Text(), nullable=True, comment="审核备注"),
        sa.Column(
            "reviewed_at", sa.DateTime(timezone=True), nullable=True, comment="审核时间"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["reviewer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_registration_applications_status"),
        "registration_applications",
        ["status"],
        unique=False,
    )
    op.create_table(
        "student_profiles",
        sa.Column("user_id", sa.Integer(), nullable=False, comment="用户ID"),
        sa.Column(
            "real_name", sa.String(length=50), nullable=False, comment="真实姓名"
        ),
        sa.Column("age", sa.Integer(), nullable=True, comment="年龄"),
        sa.Column("gender", sa.String(length=10), nullable=True, comment="性别"),
        sa.Column("id_number", sa.String(length=18), nullable=True, comment="身份证号"),
        sa.Column("phone", sa.String(length=20), nullable=True, comment="手机号码"),
        sa.Column(
            "emergency_contact_name",
            sa.String(length=50),
            nullable=True,
            comment="紧急联系人姓名",
        ),
        sa.Column(
            "emergency_contact_phone",
            sa.String(length=20),
            nullable=True,
            comment="紧急联系人电话",
        ),
        sa.Column("school", sa.String(length=100), nullable=True, comment="学校"),
        sa.Column("department", sa.String(length=100), nullable=True, comment="院系"),
        sa.Column("major", sa.String(length=100), nullable=True, comment="专业"),
        sa.Column("grade", sa.String(length=20), nullable=True, comment="年级"),
        sa.Column("class_name", sa.String(length=50), nullable=True, comment="班级"),
        sa.Column(
            "current_level", sa.Integer(), nullable=False, comment="当前能力等级"
        ),
        sa.Column(
            "total_study_time",
            sa.Integer(),
            nullable=False,
            comment="总学习时长（分钟）",
        ),
        sa.Column("total_score", sa.Float(), nullable=False, comment="总分数"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id_number"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "teacher_profiles",
        sa.Column("user_id", sa.Integer(), nullable=False, comment="用户ID"),
        sa.Column(
            "real_name", sa.String(length=50), nullable=False, comment="真实姓名"
        ),
        sa.Column("age", sa.Integer(), nullable=True, comment="年龄"),
        sa.Column("gender", sa.String(length=10), nullable=True, comment="性别"),
        sa.Column("title", sa.String(length=50), nullable=True, comment="职称"),
        sa.Column("subject", sa.String(length=100), nullable=True, comment="所授学科"),
        sa.Column("introduction", sa.Text(), nullable=True, comment="自我介绍"),
        sa.Column("phone", sa.String(length=20), nullable=True, comment="联系电话"),
        sa.Column(
            "teacher_certificate",
            sa.String(length=500),
            nullable=True,
            comment="教师证扫描件路径",
        ),
        sa.Column(
            "qualification_certificates",
            sa.JSON(),
            nullable=False,
            comment="职业资格证书列表",
        ),
        sa.Column(
            "honor_certificates", sa.JSON(), nullable=False, comment="荣誉证书列表"
        ),
        sa.Column(
            "total_teaching_hours", sa.Integer(), nullable=False, comment="总教学时长"
        ),
        sa.Column("student_count", sa.Integer(), nullable=False, comment="学生人数"),
        sa.Column("average_rating", sa.Float(), nullable=False, comment="平均评分"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "training_sessions",
        sa.Column("student_id", sa.Integer(), nullable=False, comment="学生ID"),
        sa.Column(
            "session_type",
            sa.Enum(
                "VOCABULARY",
                "LISTENING",
                "READING",
                "WRITING",
                "TRANSLATION",
                "GRAMMAR",
                "COMPREHENSIVE",
                name="trainingtype",
            ),
            nullable=False,
            comment="训练类型",
        ),
        sa.Column(
            "session_name", sa.String(length=200), nullable=False, comment="会话名称"
        ),
        sa.Column("description", sa.Text(), nullable=True, comment="会话描述"),
        sa.Column(
            "difficulty_level",
            sa.Enum(
                "BEGINNER",
                "ELEMENTARY",
                "INTERMEDIATE",
                "UPPER_INTERMEDIATE",
                "ADVANCED",
                name="difficultylevel",
            ),
            nullable=False,
            comment="难度等级",
        ),
        sa.Column("question_count", sa.Integer(), nullable=False, comment="题目数量"),
        sa.Column(
            "time_limit", sa.Integer(), nullable=True, comment="时间限制（分钟）"
        ),
        sa.Column("status", sa.String(length=20), nullable=False, comment="会话状态"),
        sa.Column(
            "started_at", sa.DateTime(timezone=True), nullable=False, comment="开始时间"
        ),
        sa.Column(
            "completed_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="完成时间",
        ),
        sa.Column("total_questions", sa.Integer(), nullable=False, comment="总题目数"),
        sa.Column(
            "correct_answers", sa.Integer(), nullable=False, comment="正确答案数"
        ),
        sa.Column("total_score", sa.Float(), nullable=False, comment="总分数"),
        sa.Column("time_spent", sa.Integer(), nullable=False, comment="实际用时（秒）"),
        sa.Column(
            "initial_level", sa.Integer(), nullable=False, comment="初始难度等级"
        ),
        sa.Column("final_level", sa.Integer(), nullable=False, comment="最终难度等级"),
        sa.Column(
            "adaptation_data", sa.JSON(), nullable=False, comment="自适应调整数据"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["student_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_training_sessions_session_type"),
        "training_sessions",
        ["session_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_sessions_status"),
        "training_sessions",
        ["status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_sessions_student_id"),
        "training_sessions",
        ["student_id"],
        unique=False,
    )
    op.create_table(
        "classes",
        sa.Column("course_id", sa.Integer(), nullable=False, comment="课程ID"),
        sa.Column("teacher_id", sa.Integer(), nullable=True, comment="教师ID"),
        sa.Column("name", sa.String(length=200), nullable=False, comment="班级名称"),
        sa.Column("description", sa.Text(), nullable=True, comment="班级描述"),
        sa.Column("code", sa.String(length=50), nullable=True, comment="班级编码"),
        sa.Column("max_students", sa.Integer(), nullable=False, comment="最大学生数"),
        sa.Column("resource_allocation", sa.JSON(), nullable=False, comment="资源分配"),
        sa.Column("class_rules", sa.JSON(), nullable=False, comment="班级规则"),
        sa.Column(
            "start_date", sa.DateTime(timezone=True), nullable=True, comment="开始日期"
        ),
        sa.Column(
            "end_date", sa.DateTime(timezone=True), nullable=True, comment="结束日期"
        ),
        sa.Column("schedule", sa.JSON(), nullable=False, comment="课程表"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否激活"),
        sa.Column("status", sa.String(length=20), nullable=False, comment="班级状态"),
        sa.Column(
            "current_students", sa.Integer(), nullable=False, comment="当前学生数"
        ),
        sa.Column("completion_rate", sa.Float(), nullable=False, comment="完成率"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "resources",
        sa.Column("course_id", sa.Integer(), nullable=False, comment="课程ID"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column("name", sa.String(length=200), nullable=False, comment="资源名称"),
        sa.Column("description", sa.Text(), nullable=True, comment="资源描述"),
        sa.Column(
            "resource_type", sa.String(length=50), nullable=False, comment="资源类型"
        ),
        sa.Column(
            "file_path", sa.String(length=500), nullable=True, comment="文件路径"
        ),
        sa.Column("file_size", sa.Integer(), nullable=True, comment="文件大小"),
        sa.Column(
            "mime_type", sa.String(length=100), nullable=True, comment="文件类型"
        ),
        sa.Column("url", sa.String(length=500), nullable=True, comment="资源URL"),
        sa.Column("resource_metadata", sa.JSON(), nullable=False, comment="资源元数据"),
        sa.Column("tags", sa.JSON(), nullable=False, comment="资源标签"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否启用"),
        sa.Column("is_public", sa.Boolean(), nullable=False, comment="是否公开"),
        sa.Column("download_count", sa.Integer(), nullable=False, comment="下载次数"),
        sa.Column("view_count", sa.Integer(), nullable=False, comment="查看次数"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_resources_resource_type"), "resources", ["resource_type"], unique=False
    )
    op.create_table(
        "syllabi",
        sa.Column("course_id", sa.Integer(), nullable=False, comment="课程ID"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column("title", sa.String(length=200), nullable=False, comment="大纲标题"),
        sa.Column("description", sa.Text(), nullable=True, comment="大纲描述"),
        sa.Column("version", sa.String(length=20), nullable=False, comment="大纲版本"),
        sa.Column("objectives", sa.JSON(), nullable=False, comment="教学目标"),
        sa.Column("chapters", sa.JSON(), nullable=False, comment="章节内容"),
        sa.Column("assessments", sa.JSON(), nullable=False, comment="考核方式"),
        sa.Column("resources", sa.JSON(), nullable=False, comment="参考资料"),
        sa.Column("total_weeks", sa.Integer(), nullable=True, comment="总周数"),
        sa.Column("total_hours", sa.Integer(), nullable=True, comment="总学时"),
        sa.Column("schedule", sa.JSON(), nullable=False, comment="进度安排"),
        sa.Column("is_approved", sa.Boolean(), nullable=False, comment="是否审核通过"),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="审核者ID"),
        sa.Column(
            "approved_at", sa.DateTime(timezone=True), nullable=True, comment="审核时间"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("course_id"),
    )
    op.create_table(
        "training_records",
        sa.Column("session_id", sa.Integer(), nullable=False, comment="训练会话ID"),
        sa.Column("student_id", sa.Integer(), nullable=False, comment="学生ID"),
        sa.Column("question_id", sa.Integer(), nullable=False, comment="题目ID"),
        sa.Column("user_answer", sa.JSON(), nullable=False, comment="用户答案"),
        sa.Column("is_correct", sa.Boolean(), nullable=False, comment="是否正确"),
        sa.Column("score", sa.Float(), nullable=False, comment="得分"),
        sa.Column(
            "start_time", sa.DateTime(timezone=True), nullable=False, comment="开始时间"
        ),
        sa.Column(
            "end_time", sa.DateTime(timezone=True), nullable=True, comment="结束时间"
        ),
        sa.Column("time_spent", sa.Integer(), nullable=False, comment="用时（秒）"),
        sa.Column(
            "grading_status",
            sa.Enum(
                "PENDING",
                "GRADING",
                "COMPLETED",
                "FAILED",
                "REVIEWING",
                name="gradingstatus",
            ),
            nullable=False,
            comment="批改状态",
        ),
        sa.Column("ai_feedback", sa.JSON(), nullable=False, comment="AI反馈内容"),
        sa.Column("ai_confidence", sa.Float(), nullable=False, comment="AI置信度"),
        sa.Column(
            "knowledge_points_mastered",
            sa.JSON(),
            nullable=False,
            comment="掌握的知识点",
        ),
        sa.Column(
            "knowledge_points_weak", sa.JSON(), nullable=False, comment="薄弱的知识点"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"], ["training_sessions.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["student_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_training_records_session_id"),
        "training_records",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_records_student_id"),
        "training_records",
        ["student_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_training_records_student_id"), table_name="training_records")
    op.drop_index(op.f("ix_training_records_session_id"), table_name="training_records")
    op.drop_table("training_records")
    op.drop_table("syllabi")
    op.drop_index(op.f("ix_resources_resource_type"), table_name="resources")
    op.drop_table("resources")
    op.drop_table("classes")
    op.drop_index(
        op.f("ix_training_sessions_student_id"), table_name="training_sessions"
    )
    op.drop_index(op.f("ix_training_sessions_status"), table_name="training_sessions")
    op.drop_index(
        op.f("ix_training_sessions_session_type"), table_name="training_sessions"
    )
    op.drop_table("training_sessions")
    op.drop_table("teacher_profiles")
    op.drop_table("student_profiles")
    op.drop_index(
        op.f("ix_registration_applications_status"),
        table_name="registration_applications",
    )
    op.drop_table("registration_applications")
    op.drop_index(op.f("ix_questions_training_type"), table_name="questions")
    op.drop_index(op.f("ix_questions_question_type"), table_name="questions")
    op.drop_index(op.f("ix_questions_difficulty_level"), table_name="questions")
    op.drop_table("questions")
    op.drop_index(
        op.f("ix_question_batches_training_type"), table_name="question_batches"
    )
    op.drop_table("question_batches")
    op.drop_index(op.f("ix_courses_status"), table_name="courses")
    op.drop_index(op.f("ix_courses_name"), table_name="courses")
    op.drop_table("courses")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_user_type"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
