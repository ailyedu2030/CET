"""Add intelligent training loop model for requirement 21

Revision ID: edde780bb399
Revises: 015_training_workshop
Create Date: 2025-08-24 22:04:48.910398

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "edde780bb399"
down_revision: str | Sequence[str] | None = "015_training_workshop"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "campuses",
        sa.Column("name", sa.String(length=100), nullable=False, comment="校区名称"),
        sa.Column("address", sa.String(length=200), nullable=True, comment="校区地址"),
        sa.Column("description", sa.Text(), nullable=True, comment="校区描述"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否启用"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "login_attempts",
        sa.Column(
            "username",
            sa.String(length=100),
            nullable=False,
            comment="尝试登录的用户名",
        ),
        sa.Column(
            "ip_address", sa.String(length=45), nullable=False, comment="来源IP地址"
        ),
        sa.Column("user_agent", sa.Text(), nullable=True, comment="用户代理字符串"),
        sa.Column("success", sa.Boolean(), nullable=False, comment="是否成功"),
        sa.Column(
            "failure_reason", sa.String(length=100), nullable=True, comment="失败原因"
        ),
        sa.Column(
            "attempted_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="尝试时间",
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_login_attempts_attempted_at"),
        "login_attempts",
        ["attempted_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_login_attempts_ip_address"),
        "login_attempts",
        ["ip_address"],
        unique=False,
    )
    op.create_index(
        op.f("ix_login_attempts_success"), "login_attempts", ["success"], unique=False
    )
    op.create_index(
        op.f("ix_login_attempts_username"), "login_attempts", ["username"], unique=False
    )
    op.create_table(
        "permissions",
        sa.Column("name", sa.String(length=100), nullable=False, comment="权限名称"),
        sa.Column("code", sa.String(length=100), nullable=False, comment="权限代码"),
        sa.Column("description", sa.Text(), nullable=True, comment="权限描述"),
        sa.Column("module", sa.String(length=50), nullable=False, comment="所属模块"),
        sa.Column("action", sa.String(length=50), nullable=False, comment="操作类型"),
        sa.Column("resource", sa.String(length=100), nullable=True, comment="资源类型"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否激活"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_permissions_code"), "permissions", ["code"], unique=True)
    op.create_index(
        op.f("ix_permissions_module"), "permissions", ["module"], unique=False
    )
    op.create_index(op.f("ix_permissions_name"), "permissions", ["name"], unique=True)
    op.create_table(
        "roles",
        sa.Column("name", sa.String(length=50), nullable=False, comment="角色名称"),
        sa.Column("code", sa.String(length=50), nullable=False, comment="角色代码"),
        sa.Column("description", sa.Text(), nullable=True, comment="角色描述"),
        sa.Column(
            "level",
            sa.Integer(),
            nullable=False,
            comment="角色等级（数字越大权限越高）",
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否激活"),
        sa.Column(
            "is_system", sa.Boolean(), nullable=False, comment="是否系统内置角色"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_roles_code"), "roles", ["code"], unique=True)
    op.create_index(op.f("ix_roles_name"), "roles", ["name"], unique=True)
    op.create_table(
        "billing_records",
        sa.Column("student_id", sa.Integer(), nullable=False, comment="学生ID"),
        sa.Column(
            "billing_type",
            sa.String(length=20),
            nullable=False,
            comment="收费类型：tuition/material/exam/refund",
        ),
        sa.Column("amount", sa.Float(), nullable=False, comment="金额"),
        sa.Column("currency", sa.String(length=10), nullable=False, comment="货币类型"),
        sa.Column("billing_date", sa.Date(), nullable=False, comment="收费日期"),
        sa.Column("due_date", sa.Date(), nullable=True, comment="到期日期"),
        sa.Column(
            "payment_status",
            sa.String(length=20),
            nullable=False,
            comment="支付状态：pending/paid/overdue/cancelled",
        ),
        sa.Column(
            "payment_method",
            sa.String(length=20),
            nullable=True,
            comment="支付方式：cash/card/transfer/alipay/wechat",
        ),
        sa.Column(
            "payment_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="支付时间",
        ),
        sa.Column(
            "transaction_id", sa.String(length=100), nullable=True, comment="交易流水号"
        ),
        sa.Column("description", sa.Text(), nullable=False, comment="收费描述"),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建人ID"),
        sa.Column("processed_by", sa.Integer(), nullable=True, comment="处理人ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["processed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["student_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_billing_records_billing_date"),
        "billing_records",
        ["billing_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_billing_records_student_id"),
        "billing_records",
        ["student_id"],
        unique=False,
    )
    op.create_table(
        "buildings",
        sa.Column("campus_id", sa.Integer(), nullable=False, comment="校区ID"),
        sa.Column("name", sa.String(length=50), nullable=False, comment="楼栋名称"),
        sa.Column(
            "building_number", sa.String(length=20), nullable=True, comment="楼号"
        ),
        sa.Column("floors", sa.Integer(), nullable=False, comment="楼层数"),
        sa.Column("description", sa.Text(), nullable=True, comment="楼栋描述"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否启用"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["campus_id"], ["campuses.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "intelligent_training_loops",
        sa.Column("student_id", sa.Integer(), nullable=False, comment="学生ID"),
        sa.Column(
            "training_type",
            postgresql.ENUM(
                "VOCABULARY",
                "LISTENING",
                "READING",
                "WRITING",
                "TRANSLATION",
                "GRAMMAR",
                "COMPREHENSIVE",
                name="trainingtype",
                create_type=False,
            ),
            nullable=False,
            comment="训练类型",
        ),
        sa.Column(
            "execution_time",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="执行时间",
        ),
        sa.Column(
            "next_execution_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="下次执行时间",
        ),
        sa.Column(
            "data_collection_result", sa.JSON(), nullable=False, comment="数据采集结果"
        ),
        sa.Column(
            "ai_analysis_result", sa.JSON(), nullable=False, comment="AI分析结果"
        ),
        sa.Column(
            "strategy_adjustment_result",
            sa.JSON(),
            nullable=False,
            comment="策略调整结果",
        ),
        sa.Column(
            "effect_verification_result",
            sa.JSON(),
            nullable=False,
            comment="效果验证结果",
        ),
        sa.Column("loop_success", sa.Boolean(), nullable=False, comment="闭环是否成功"),
        sa.Column(
            "ai_analysis_accuracy", sa.Float(), nullable=False, comment="AI分析准确率"
        ),
        sa.Column("improvement_rate", sa.Float(), nullable=False, comment="改进率"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["student_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_intelligent_training_loops_student_id"),
        "intelligent_training_loops",
        ["student_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_intelligent_training_loops_training_type"),
        "intelligent_training_loops",
        ["training_type"],
        unique=False,
    )
    op.create_table(
        "login_sessions",
        sa.Column("user_id", sa.Integer(), nullable=False, comment="用户ID"),
        sa.Column(
            "session_token", sa.String(length=255), nullable=False, comment="会话令牌"
        ),
        sa.Column(
            "refresh_token", sa.String(length=255), nullable=True, comment="刷新令牌"
        ),
        sa.Column(
            "login_ip", sa.String(length=45), nullable=True, comment="登录IP地址"
        ),
        sa.Column("user_agent", sa.Text(), nullable=True, comment="用户代理字符串"),
        sa.Column("device_info", sa.JSON(), nullable=True, comment="设备信息"),
        sa.Column(
            "expires_at", sa.DateTime(timezone=True), nullable=False, comment="过期时间"
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否激活"),
        sa.Column(
            "last_activity",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="最后活跃时间",
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("refresh_token"),
    )
    op.create_index(
        op.f("ix_login_sessions_session_token"),
        "login_sessions",
        ["session_token"],
        unique=True,
    )
    op.create_index(
        op.f("ix_login_sessions_user_id"), "login_sessions", ["user_id"], unique=False
    )
    op.create_table(
        "qualification_reviews",
        sa.Column("teacher_id", sa.Integer(), nullable=False, comment="教师ID"),
        sa.Column(
            "review_type",
            sa.String(length=20),
            nullable=False,
            comment="审核类型：annual_review/certification/renewal",
        ),
        sa.Column(
            "review_cycle",
            sa.String(length=20),
            nullable=False,
            comment="审核周期：annual/biannual/triennial",
        ),
        sa.Column("submission_date", sa.Date(), nullable=False, comment="提交日期"),
        sa.Column("submitted_materials", sa.JSON(), nullable=False, comment="提交材料"),
        sa.Column(
            "review_status",
            sa.String(length=20),
            nullable=False,
            comment="审核状态：submitted/under_review/approved/rejected",
        ),
        sa.Column(
            "review_result",
            sa.String(length=20),
            nullable=True,
            comment="审核结果：pass/conditional_pass/fail",
        ),
        sa.Column("review_comments", sa.Text(), nullable=True, comment="审核意见"),
        sa.Column("valid_from", sa.Date(), nullable=True, comment="有效期开始"),
        sa.Column("valid_until", sa.Date(), nullable=True, comment="有效期结束"),
        sa.Column("reviewer_id", sa.Integer(), nullable=True, comment="审核人员ID"),
        sa.Column(
            "reviewed_at", sa.DateTime(timezone=True), nullable=True, comment="审核时间"
        ),
        sa.Column("submitted_by", sa.Integer(), nullable=True, comment="提交人员ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["reviewer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submitted_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["teacher_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_qualification_reviews_teacher_id"),
        "qualification_reviews",
        ["teacher_id"],
        unique=False,
    )
    op.create_table(
        "role_permissions",
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("permission_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["permission_id"], ["permissions.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.UniqueConstraint("role_id", "permission_id", name="uq_role_permission"),
    )
    op.create_table(
        "rule_configurations",
        sa.Column(
            "rule_name", sa.String(length=100), nullable=False, comment="规则名称"
        ),
        sa.Column(
            "rule_type",
            sa.String(length=50),
            nullable=False,
            comment="规则类型：binding/scheduling/capacity/resource",
        ),
        sa.Column(
            "rule_category",
            sa.String(length=50),
            nullable=False,
            comment="规则分类：class_binding/classroom_scheduling/teacher_workload",
        ),
        sa.Column("rule_config", sa.JSON(), nullable=False, comment="规则配置参数"),
        sa.Column("is_enabled", sa.Boolean(), nullable=False, comment="是否启用"),
        sa.Column("is_strict", sa.Boolean(), nullable=False, comment="是否严格执行"),
        sa.Column(
            "allow_exceptions", sa.Boolean(), nullable=False, comment="是否允许例外"
        ),
        sa.Column(
            "scope_type",
            sa.String(length=50),
            nullable=False,
            comment="适用范围类型：global/campus/building/classroom_type",
        ),
        sa.Column("scope_config", sa.JSON(), nullable=False, comment="适用范围配置"),
        sa.Column("created_by", sa.Integer(), nullable=False, comment="创建人ID"),
        sa.Column("updated_by", sa.Integer(), nullable=True, comment="更新人ID"),
        sa.Column("description", sa.Text(), nullable=True, comment="规则描述"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("rule_name"),
    )
    op.create_table(
        "salary_records",
        sa.Column("teacher_id", sa.Integer(), nullable=False, comment="教师ID"),
        sa.Column(
            "salary_type",
            sa.String(length=20),
            nullable=False,
            comment="薪酬类型：base_salary/hourly_fee/bonus/allowance",
        ),
        sa.Column(
            "calculation_period_start",
            sa.Date(),
            nullable=False,
            comment="计算周期开始",
        ),
        sa.Column(
            "calculation_period_end", sa.Date(), nullable=False, comment="计算周期结束"
        ),
        sa.Column("base_amount", sa.Float(), nullable=False, comment="基础金额"),
        sa.Column("teaching_hours", sa.Float(), nullable=False, comment="课时数"),
        sa.Column("hourly_rate", sa.Float(), nullable=False, comment="课时单价"),
        sa.Column("bonus_amount", sa.Float(), nullable=False, comment="奖金金额"),
        sa.Column("deduction_amount", sa.Float(), nullable=False, comment="扣除金额"),
        sa.Column("net_amount", sa.Float(), nullable=False, comment="实发金额"),
        sa.Column(
            "payment_status",
            sa.String(length=20),
            nullable=False,
            comment="发放状态：pending/paid/cancelled",
        ),
        sa.Column(
            "payment_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="发放时间",
        ),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="审批人ID"),
        sa.Column(
            "approved_at", sa.DateTime(timezone=True), nullable=True, comment="审批时间"
        ),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建人ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["teacher_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_salary_records_teacher_id"),
        "salary_records",
        ["teacher_id"],
        unique=False,
    )
    op.create_table(
        "student_enrollment_changes",
        sa.Column("student_id", sa.Integer(), nullable=False, comment="学生ID"),
        sa.Column(
            "change_type",
            sa.String(length=20),
            nullable=False,
            comment="变动类型：enrollment/suspension/withdrawal/transfer/graduation",
        ),
        sa.Column("change_date", sa.Date(), nullable=False, comment="变动日期"),
        sa.Column("effective_date", sa.Date(), nullable=False, comment="生效日期"),
        sa.Column(
            "previous_status", sa.String(length=20), nullable=True, comment="变动前状态"
        ),
        sa.Column(
            "new_status", sa.String(length=20), nullable=False, comment="变动后状态"
        ),
        sa.Column("reason", sa.Text(), nullable=False, comment="变动原因"),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="审批人ID"),
        sa.Column(
            "approved_at", sa.DateTime(timezone=True), nullable=True, comment="审批时间"
        ),
        sa.Column("approval_notes", sa.Text(), nullable=True, comment="审批备注"),
        sa.Column(
            "supporting_documents", sa.JSON(), nullable=False, comment="支持文档列表"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["student_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_student_enrollment_changes_change_date"),
        "student_enrollment_changes",
        ["change_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_student_enrollment_changes_student_id"),
        "student_enrollment_changes",
        ["student_id"],
        unique=False,
    )
    op.create_table(
        "teaching_records",
        sa.Column("teacher_id", sa.Integer(), nullable=False, comment="教师ID"),
        sa.Column(
            "course_name", sa.String(length=200), nullable=False, comment="课程名称"
        ),
        sa.Column(
            "course_type",
            sa.String(length=50),
            nullable=False,
            comment="课程类型：regular/makeup/trial/workshop",
        ),
        sa.Column(
            "teaching_duration",
            sa.Integer(),
            nullable=False,
            comment="授课时长（分钟）",
        ),
        sa.Column("student_count", sa.Integer(), nullable=False, comment="学生数量"),
        sa.Column(
            "teaching_start_time",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="教学开始时间",
        ),
        sa.Column(
            "teaching_end_time",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="教学结束时间",
        ),
        sa.Column(
            "teaching_status",
            sa.String(length=20),
            nullable=False,
            comment="教学状态：scheduled/ongoing/completed/cancelled",
        ),
        sa.Column(
            "teaching_rating", sa.Float(), nullable=True, comment="教学评分（1-5分）"
        ),
        sa.Column("student_feedback", sa.JSON(), nullable=False, comment="学生反馈"),
        sa.Column(
            "effectiveness_metrics", sa.JSON(), nullable=False, comment="教学效果指标"
        ),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建人ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["teacher_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_teaching_records_teacher_id"),
        "teaching_records",
        ["teacher_id"],
        unique=False,
    )
    op.create_table(
        "user_roles",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.UniqueConstraint("user_id", "role_id", name="uq_user_role"),
    )
    op.create_table(
        "classrooms",
        sa.Column("building_id", sa.Integer(), nullable=False, comment="楼栋ID"),
        sa.Column("name", sa.String(length=50), nullable=False, comment="教室名称"),
        sa.Column(
            "room_number", sa.String(length=20), nullable=False, comment="教室编号"
        ),
        sa.Column("floor", sa.Integer(), nullable=False, comment="楼层"),
        sa.Column("capacity", sa.Integer(), nullable=False, comment="座位数"),
        sa.Column("area", sa.Float(), nullable=True, comment="教室面积（平方米）"),
        sa.Column(
            "equipment_list",
            sa.JSON(),
            nullable=False,
            comment="设备列表：{设备类型: {数量, 状态, 型号}}",
        ),
        sa.Column(
            "has_projector", sa.Boolean(), nullable=False, comment="是否有投影仪"
        ),
        sa.Column("has_computer", sa.Boolean(), nullable=False, comment="是否有电脑"),
        sa.Column("has_audio", sa.Boolean(), nullable=False, comment="是否有音响设备"),
        sa.Column("has_whiteboard", sa.Boolean(), nullable=False, comment="是否有白板"),
        sa.Column("is_available", sa.Boolean(), nullable=False, comment="是否可用"),
        sa.Column(
            "available_start_time",
            sa.String(length=5),
            nullable=True,
            comment="可用开始时间（HH:MM）",
        ),
        sa.Column(
            "available_end_time",
            sa.String(length=5),
            nullable=True,
            comment="可用结束时间（HH:MM）",
        ),
        sa.Column(
            "available_days",
            sa.JSON(),
            nullable=False,
            comment="可用日期配置：{周一: true, 周二: false, ...}",
        ),
        sa.Column(
            "maintenance_status",
            sa.String(length=20),
            nullable=False,
            comment="维护状态：normal/maintenance/repair/unavailable",
        ),
        sa.Column(
            "last_maintenance_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="最后维护日期",
        ),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["building_id"], ["buildings.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "course_assignment_history",
        sa.Column("course_id", sa.Integer(), nullable=False, comment="课程ID"),
        sa.Column("teacher_id", sa.Integer(), nullable=True, comment="教师ID"),
        sa.Column("operated_by", sa.Integer(), nullable=False, comment="操作人ID"),
        sa.Column(
            "operation_type",
            sa.String(length=50),
            nullable=False,
            comment="操作类型：course_assignment/course_multiple_classes/course_multiple_teachers",
        ),
        sa.Column(
            "operation_description", sa.Text(), nullable=False, comment="操作描述"
        ),
        sa.Column("operation_data", sa.JSON(), nullable=False, comment="操作数据"),
        sa.Column(
            "operated_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="操作时间",
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["operated_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "course_templates",
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column("source_course_id", sa.Integer(), nullable=True, comment="源课程ID"),
        sa.Column("name", sa.String(length=200), nullable=False, comment="模板名称"),
        sa.Column("description", sa.Text(), nullable=True, comment="模板描述"),
        sa.Column("category", sa.String(length=50), nullable=True, comment="模板分类"),
        sa.Column("template_data", sa.JSON(), nullable=False, comment="模板数据"),
        sa.Column("default_settings", sa.JSON(), nullable=False, comment="默认设置"),
        sa.Column("usage_count", sa.Integer(), nullable=False, comment="使用次数"),
        sa.Column("is_public", sa.Boolean(), nullable=False, comment="是否公开"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="是否激活"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_course_id"],
            ["courses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "course_versions",
        sa.Column("course_id", sa.Integer(), nullable=False, comment="课程ID"),
        sa.Column("created_by", sa.Integer(), nullable=True, comment="创建者ID"),
        sa.Column("version", sa.String(length=20), nullable=False, comment="版本号"),
        sa.Column(
            "version_name", sa.String(length=100), nullable=True, comment="版本名称"
        ),
        sa.Column("change_log", sa.Text(), nullable=True, comment="版本变更说明"),
        sa.Column("snapshot_data", sa.JSON(), nullable=False, comment="课程数据快照"),
        sa.Column(
            "is_active", sa.Boolean(), nullable=False, comment="是否为当前激活版本"
        ),
        sa.Column("is_backup", sa.Boolean(), nullable=False, comment="是否为备份版本"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "invoices",
        sa.Column(
            "billing_record_id", sa.Integer(), nullable=False, comment="收费记录ID"
        ),
        sa.Column(
            "invoice_number", sa.String(length=50), nullable=False, comment="发票号码"
        ),
        sa.Column(
            "invoice_type",
            sa.String(length=20),
            nullable=False,
            comment="发票类型：electronic/paper",
        ),
        sa.Column("invoice_date", sa.Date(), nullable=False, comment="开票日期"),
        sa.Column(
            "company_name", sa.String(length=200), nullable=True, comment="公司名称"
        ),
        sa.Column("tax_number", sa.String(length=50), nullable=True, comment="税号"),
        sa.Column(
            "company_address", sa.String(length=500), nullable=True, comment="公司地址"
        ),
        sa.Column(
            "company_phone", sa.String(length=50), nullable=True, comment="公司电话"
        ),
        sa.Column(
            "bank_info", sa.String(length=200), nullable=True, comment="银行信息"
        ),
        sa.Column("total_amount", sa.Float(), nullable=False, comment="发票总金额"),
        sa.Column("tax_amount", sa.Float(), nullable=False, comment="税额"),
        sa.Column("tax_rate", sa.Float(), nullable=False, comment="税率"),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=False,
            comment="发票状态：draft/issued/cancelled",
        ),
        sa.Column("issued_by", sa.Integer(), nullable=True, comment="开票人ID"),
        sa.Column(
            "issued_at", sa.DateTime(timezone=True), nullable=True, comment="开票时间"
        ),
        sa.Column(
            "file_path", sa.String(length=500), nullable=True, comment="发票文件路径"
        ),
        sa.Column("file_size", sa.Integer(), nullable=True, comment="文件大小（字节）"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["billing_record_id"], ["billing_records.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["issued_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("billing_record_id"),
        sa.UniqueConstraint("invoice_number"),
    )
    op.create_table(
        "rule_execution_logs",
        sa.Column("rule_id", sa.Integer(), nullable=False, comment="规则ID"),
        sa.Column(
            "execution_type",
            sa.String(length=50),
            nullable=False,
            comment="执行类型：validation/enforcement/monitoring",
        ),
        sa.Column(
            "execution_result",
            sa.String(length=50),
            nullable=False,
            comment="执行结果：success/violation/error/warning",
        ),
        sa.Column("execution_context", sa.JSON(), nullable=False, comment="执行上下文"),
        sa.Column("violation_details", sa.JSON(), nullable=True, comment="违规详情"),
        sa.Column(
            "resolution_action",
            sa.String(length=100),
            nullable=True,
            comment="解决措施",
        ),
        sa.Column(
            "target_type",
            sa.String(length=50),
            nullable=False,
            comment="目标类型：class/teacher/classroom/course",
        ),
        sa.Column("target_id", sa.Integer(), nullable=False, comment="目标ID"),
        sa.Column("executed_by", sa.Integer(), nullable=True, comment="执行人ID"),
        sa.Column(
            "execution_time",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="执行时间",
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["executed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rule_id"], ["rule_configurations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rule_exemption_requests",
        sa.Column("rule_id", sa.Integer(), nullable=True, comment="规则ID"),
        sa.Column("course_id", sa.Integer(), nullable=True, comment="课程ID"),
        sa.Column("teacher_id", sa.Integer(), nullable=True, comment="教师ID"),
        sa.Column("requested_by", sa.Integer(), nullable=False, comment="申请人ID"),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="审批人ID"),
        sa.Column(
            "exemption_type",
            sa.String(length=50),
            nullable=False,
            comment="豁免类型：workload/time_conflict/qualification/classroom",
        ),
        sa.Column("exemption_reason", sa.Text(), nullable=False, comment="豁免原因"),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=False,
            comment="状态：pending/approved/rejected",
        ),
        sa.Column("approval_notes", sa.Text(), nullable=True, comment="审批备注"),
        sa.Column(
            "requested_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="申请时间",
        ),
        sa.Column(
            "approved_at", sa.DateTime(timezone=True), nullable=True, comment="审批时间"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["requested_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rule_id"], ["rule_configurations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rule_monitoring",
        sa.Column("rule_id", sa.Integer(), nullable=False, comment="规则ID"),
        sa.Column(
            "monitoring_period",
            sa.String(length=20),
            nullable=False,
            comment="监控周期：daily/weekly/monthly",
        ),
        sa.Column(
            "period_start",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="周期开始时间",
        ),
        sa.Column(
            "period_end",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="周期结束时间",
        ),
        sa.Column(
            "total_executions", sa.Integer(), nullable=False, comment="总执行次数"
        ),
        sa.Column(
            "successful_executions",
            sa.Integer(),
            nullable=False,
            comment="成功执行次数",
        ),
        sa.Column("violation_count", sa.Integer(), nullable=False, comment="违规次数"),
        sa.Column("exception_count", sa.Integer(), nullable=False, comment="例外次数"),
        sa.Column(
            "effectiveness_score",
            sa.Float(),
            nullable=True,
            comment="效果评分（0-100）",
        ),
        sa.Column(
            "compliance_rate", sa.Float(), nullable=False, comment="合规率（0-1）"
        ),
        sa.Column(
            "optimization_suggestions", sa.JSON(), nullable=True, comment="优化建议"
        ),
        sa.Column("created_by", sa.Integer(), nullable=False, comment="创建人ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rule_id"], ["rule_configurations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "teacher_course_permissions",
        sa.Column("teacher_id", sa.Integer(), nullable=False, comment="教师ID"),
        sa.Column("course_id", sa.Integer(), nullable=False, comment="课程ID"),
        sa.Column(
            "assigned_modules", sa.JSON(), nullable=False, comment="分配的模块/章节"
        ),
        sa.Column(
            "permission_scope",
            sa.String(length=50),
            nullable=False,
            comment="权限范围：full_access/module_edit/module_only/view_all",
        ),
        sa.Column(
            "can_edit_content", sa.Boolean(), nullable=False, comment="是否可以编辑内容"
        ),
        sa.Column(
            "can_view_all_modules",
            sa.Boolean(),
            nullable=False,
            comment="是否可以查看所有模块",
        ),
        sa.Column(
            "can_manage_students",
            sa.Boolean(),
            nullable=False,
            comment="是否可以管理学生",
        ),
        sa.Column(
            "can_grade_assignments",
            sa.Boolean(),
            nullable=False,
            comment="是否可以评分作业",
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["course_id"], ["courses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["teacher_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attendance_records",
        sa.Column("student_id", sa.Integer(), nullable=False, comment="学生ID"),
        sa.Column("class_id", sa.Integer(), nullable=True, comment="班级ID"),
        sa.Column("attendance_date", sa.Date(), nullable=False, comment="考勤日期"),
        sa.Column(
            "attendance_type",
            sa.String(length=20),
            nullable=False,
            comment="考勤类型：present/absent/late/leave",
        ),
        sa.Column(
            "check_in_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="签到时间",
        ),
        sa.Column(
            "check_out_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="签退时间",
        ),
        sa.Column(
            "leave_type",
            sa.String(length=20),
            nullable=True,
            comment="请假类型：sick/personal/emergency",
        ),
        sa.Column("leave_reason", sa.Text(), nullable=True, comment="请假原因"),
        sa.Column(
            "leave_approved", sa.Boolean(), nullable=False, comment="请假是否批准"
        ),
        sa.Column("approved_by", sa.Integer(), nullable=True, comment="批准人ID"),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column("recorded_by", sa.Integer(), nullable=True, comment="记录人ID"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["approved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["class_id"], ["classes.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(
            ["recorded_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["student_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_attendance_records_attendance_date"),
        "attendance_records",
        ["attendance_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_attendance_records_class_id"),
        "attendance_records",
        ["class_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_attendance_records_student_id"),
        "attendance_records",
        ["student_id"],
        unique=False,
    )
    op.create_table(
        "class_resource_history",
        sa.Column("class_id", sa.Integer(), nullable=False, comment="班级ID"),
        sa.Column("changed_by", sa.Integer(), nullable=False, comment="变更人ID"),
        sa.Column(
            "change_type",
            sa.String(length=20),
            nullable=False,
            comment="变更类型：create/update/delete/allocate",
        ),
        sa.Column(
            "old_allocation", sa.JSON(), nullable=False, comment="变更前资源配置"
        ),
        sa.Column(
            "new_allocation", sa.JSON(), nullable=False, comment="变更后资源配置"
        ),
        sa.Column("change_reason", sa.Text(), nullable=True, comment="变更原因"),
        sa.Column(
            "changed_at", sa.DateTime(timezone=True), nullable=False, comment="变更时间"
        ),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["changed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["class_id"], ["classes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "classroom_schedules",
        sa.Column("classroom_id", sa.Integer(), nullable=False, comment="教室ID"),
        sa.Column(
            "course_id", sa.Integer(), nullable=True, comment="课程ID（预留外键）"
        ),
        sa.Column("teacher_id", sa.Integer(), nullable=True, comment="教师ID"),
        sa.Column("title", sa.String(length=100), nullable=False, comment="课程标题"),
        sa.Column(
            "start_time", sa.DateTime(timezone=True), nullable=False, comment="开始时间"
        ),
        sa.Column(
            "end_time", sa.DateTime(timezone=True), nullable=False, comment="结束时间"
        ),
        sa.Column("day_of_week", sa.Integer(), nullable=False, comment="星期几（1-7）"),
        sa.Column("is_recurring", sa.Boolean(), nullable=False, comment="是否重复"),
        sa.Column(
            "recurrence_pattern",
            sa.String(length=20),
            nullable=True,
            comment="重复模式：weekly/biweekly/monthly",
        ),
        sa.Column(
            "recurrence_end_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="重复结束日期",
        ),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=False,
            comment="状态：scheduled/cancelled/completed",
        ),
        sa.Column("student_count", sa.Integer(), nullable=False, comment="学生人数"),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["classroom_id"], ["classrooms.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "equipment",
        sa.Column("classroom_id", sa.Integer(), nullable=False, comment="教室ID"),
        sa.Column("name", sa.String(length=100), nullable=False, comment="设备名称"),
        sa.Column(
            "equipment_type",
            sa.String(length=50),
            nullable=False,
            comment="设备类型：projector/computer/audio/whiteboard/other",
        ),
        sa.Column("brand", sa.String(length=50), nullable=True, comment="品牌"),
        sa.Column("model", sa.String(length=100), nullable=True, comment="型号"),
        sa.Column(
            "serial_number", sa.String(length=100), nullable=True, comment="序列号"
        ),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=False,
            comment="设备状态：normal/maintenance/repair/broken/retired",
        ),
        sa.Column(
            "purchase_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="购买日期",
        ),
        sa.Column(
            "warranty_end_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="保修结束日期",
        ),
        sa.Column(
            "last_maintenance_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="最后维护日期",
        ),
        sa.Column(
            "next_maintenance_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="下次维护日期",
        ),
        sa.Column(
            "total_usage_hours",
            sa.Integer(),
            nullable=False,
            comment="总使用时长（小时）",
        ),
        sa.Column(
            "monthly_usage_hours",
            sa.Integer(),
            nullable=False,
            comment="月度使用时长（小时）",
        ),
        sa.Column("failure_count", sa.Integer(), nullable=False, comment="故障次数"),
        sa.Column("specifications", sa.JSON(), nullable=False, comment="设备规格参数"),
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(
            ["classroom_id"], ["classrooms.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "equipment_maintenance_records",
        sa.Column("equipment_id", sa.Integer(), nullable=False, comment="设备ID"),
        sa.Column("maintainer_id", sa.Integer(), nullable=True, comment="维护人员ID"),
        sa.Column(
            "maintenance_type",
            sa.String(length=20),
            nullable=False,
            comment="维护类型：routine/repair/upgrade/inspection",
        ),
        sa.Column(
            "maintenance_date",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="维护日期",
        ),
        sa.Column("description", sa.Text(), nullable=False, comment="维护描述"),
        sa.Column("cost", sa.Float(), nullable=False, comment="维护费用"),
        sa.Column(
            "duration_hours", sa.Float(), nullable=False, comment="维护时长（小时）"
        ),
        sa.Column(
            "result",
            sa.String(length=20),
            nullable=False,
            comment="维护结果：completed/failed/partial",
        ),
        sa.Column(
            "next_maintenance_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="建议下次维护日期",
        ),
        sa.Column("notes", sa.Text(), nullable=True, comment="维护备注"),
        sa.Column(
            "id", sa.Integer(), autoincrement=True, nullable=False, comment="主键ID"
        ),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), nullable=False, comment="创建时间"
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), nullable=True, comment="更新时间"
        ),
        sa.ForeignKeyConstraint(["equipment_id"], ["equipment.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["maintainer_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "courses",
        sa.Column(
            "share_level",
            sa.Enum(
                "PRIVATE",
                "CLASS_SHARED",
                "SCHOOL_SHARED",
                "PUBLIC",
                name="coursesharelevel",
            ),
            nullable=False,
            comment="共享级别",
        ),
    )
    op.alter_column(
        "courses",
        "status",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.Enum(
            "PREPARING",
            "UNDER_REVIEW",
            "APPROVED",
            "PUBLISHED",
            "SUSPENDED",
            "ARCHIVED",
            "DELETED",
            name="coursestatus",
        ),
        existing_comment="课程状态",
        existing_nullable=False,
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "learning_status",
            sa.String(length=20),
            nullable=False,
            comment="学习状态：active/inactive/suspended/graduated",
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "enrollment_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="入学日期",
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "graduation_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="毕业日期",
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column("average_score", sa.Float(), nullable=False, comment="平均分数"),
    )
    op.add_column(
        "student_profiles",
        sa.Column("best_score", sa.Float(), nullable=False, comment="最高分数"),
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "total_exercises", sa.Integer(), nullable=False, comment="总练习次数"
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "parent_name", sa.String(length=50), nullable=True, comment="家长姓名"
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "parent_phone", sa.String(length=20), nullable=True, comment="家长电话"
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column(
            "parent_email", sa.String(length=100), nullable=True, comment="家长邮箱"
        ),
    )
    op.add_column(
        "student_profiles",
        sa.Column("notes", sa.Text(), nullable=True, comment="备注信息"),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "teaching_status",
            sa.String(length=20),
            nullable=False,
            comment="教学状态：active/inactive/suspended/retired",
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "hire_date", sa.DateTime(timezone=True), nullable=True, comment="入职日期"
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "contract_end_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="合同结束日期",
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "monthly_hours", sa.Integer(), nullable=False, comment="月度课时统计"
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "total_evaluations", sa.Integer(), nullable=False, comment="评价总数"
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "hourly_rate", sa.Float(), nullable=False, comment="课时费（元/小时）"
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column("monthly_salary", sa.Float(), nullable=False, comment="月度薪资"),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "total_salary_paid", sa.Float(), nullable=False, comment="累计已发薪资"
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "last_salary_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="最后发薪日期",
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "qualification_status",
            sa.String(length=20),
            nullable=False,
            comment="资质状态：pending/approved/rejected/expired",
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "last_review_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="最后审核日期",
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "next_review_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="下次审核日期（每年一次）",
        ),
    )
    op.add_column(
        "teacher_profiles",
        sa.Column(
            "qualification_notes", sa.Text(), nullable=True, comment="资质审核备注"
        ),
    )
    op.alter_column(
        "training_parameter_templates",
        "name",
        existing_type=sa.VARCHAR(length=100),
        comment="模板名称",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "description",
        existing_type=sa.TEXT(),
        comment="模板描述",
        existing_nullable=True,
    )
    op.alter_column(
        "training_parameter_templates",
        "config",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        comment="训练参数配置JSON",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "is_default",
        existing_type=sa.BOOLEAN(),
        comment="是否为默认模板",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "is_active",
        existing_type=sa.BOOLEAN(),
        comment="是否激活",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "created_by",
        existing_type=sa.INTEGER(),
        comment="创建者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "id",
        existing_type=sa.INTEGER(),
        comment="主键ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "training_parameter_templates",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        comment="创建时间",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=True,
        comment="更新时间",
    )
    op.drop_index(
        op.f("ix_training_parameter_templates_created_by_active"),
        table_name="training_parameter_templates",
    )
    op.drop_index(
        op.f("ix_training_parameter_templates_is_active"),
        table_name="training_parameter_templates",
    )
    op.drop_index(
        op.f("ix_training_parameter_templates_is_default"),
        table_name="training_parameter_templates",
    )
    op.drop_table_comment(
        "training_parameter_templates",
        existing_comment="训练参数模板表 - 需求15验收标准2",
        schema=None,
    )
    op.alter_column(
        "training_task_submissions",
        "submission_data",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        comment="提交数据JSON",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "score",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="得分",
        existing_nullable=True,
    )
    op.alter_column(
        "training_task_submissions",
        "completion_rate",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="完成率",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "started_at",
        existing_type=postgresql.TIMESTAMP(),
        comment="开始时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_task_submissions",
        "completed_at",
        existing_type=postgresql.TIMESTAMP(),
        comment="完成时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_task_submissions",
        "task_id",
        existing_type=sa.INTEGER(),
        comment="任务ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "student_id",
        existing_type=sa.INTEGER(),
        comment="学生ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "id",
        existing_type=sa.INTEGER(),
        comment="主键ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "training_task_submissions",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        comment="创建时间",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=True,
        comment="更新时间",
    )
    op.drop_index(
        op.f("ix_training_task_submissions_completed_at"),
        table_name="training_task_submissions",
    )
    op.drop_index(
        op.f("ix_training_task_submissions_task_student"),
        table_name="training_task_submissions",
    )
    op.drop_table_comment(
        "training_task_submissions",
        existing_comment="训练任务提交记录表 - 需求15验收标准5",
        schema=None,
    )
    op.alter_column(
        "training_tasks",
        "task_name",
        existing_type=sa.VARCHAR(length=200),
        comment="任务名称",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "task_type",
        existing_type=sa.VARCHAR(length=50),
        comment="任务类型: weekly/custom",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "config",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        comment="任务配置JSON",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "status",
        existing_type=sa.VARCHAR(length=20),
        comment="任务状态: draft/published/completed",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "publish_time",
        existing_type=postgresql.TIMESTAMP(),
        comment="发布时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_tasks",
        "deadline",
        existing_type=postgresql.TIMESTAMP(),
        comment="截止时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_tasks",
        "class_id",
        existing_type=sa.INTEGER(),
        comment="班级ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "teacher_id",
        existing_type=sa.INTEGER(),
        comment="教师ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "template_id",
        existing_type=sa.INTEGER(),
        comment="使用的参数模板ID",
        existing_nullable=True,
    )
    op.alter_column(
        "training_tasks",
        "id",
        existing_type=sa.INTEGER(),
        comment="主键ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('training_tasks_id_seq'::regclass)"),
    )
    op.alter_column(
        "training_tasks",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        comment="创建时间",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=True,
        comment="更新时间",
    )
    op.drop_index(op.f("ix_training_tasks_deadline"), table_name="training_tasks")
    op.drop_index(op.f("ix_training_tasks_publish_time"), table_name="training_tasks")
    op.drop_index(
        op.f("ix_training_tasks_status_publish_time"), table_name="training_tasks"
    )
    op.drop_index(op.f("ix_training_tasks_teacher_class"), table_name="training_tasks")
    op.drop_table_comment(
        "training_tasks", existing_comment="训练任务表 - 需求15验收标准4", schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        "training_tasks",
        "训练任务表 - 需求15验收标准4",
        existing_comment=None,
        schema=None,
    )
    op.create_index(
        op.f("ix_training_tasks_teacher_class"),
        "training_tasks",
        ["teacher_id", "class_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_tasks_status_publish_time"),
        "training_tasks",
        ["status", "publish_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_tasks_publish_time"),
        "training_tasks",
        ["publish_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_tasks_deadline"), "training_tasks", ["deadline"], unique=False
    )
    op.alter_column(
        "training_tasks",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=False,
        comment=None,
        existing_comment="更新时间",
    )
    op.alter_column(
        "training_tasks",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="创建时间",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="主键ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('training_tasks_id_seq'::regclass)"),
    )
    op.alter_column(
        "training_tasks",
        "template_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="使用的参数模板ID",
        existing_nullable=True,
    )
    op.alter_column(
        "training_tasks",
        "teacher_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="教师ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "class_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="班级ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "deadline",
        existing_type=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="截止时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_tasks",
        "publish_time",
        existing_type=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="发布时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_tasks",
        "status",
        existing_type=sa.VARCHAR(length=20),
        comment=None,
        existing_comment="任务状态: draft/published/completed",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "config",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        comment=None,
        existing_comment="任务配置JSON",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "task_type",
        existing_type=sa.VARCHAR(length=50),
        comment=None,
        existing_comment="任务类型: weekly/custom",
        existing_nullable=False,
    )
    op.alter_column(
        "training_tasks",
        "task_name",
        existing_type=sa.VARCHAR(length=200),
        comment=None,
        existing_comment="任务名称",
        existing_nullable=False,
    )
    op.create_table_comment(
        "training_task_submissions",
        "训练任务提交记录表 - 需求15验收标准5",
        existing_comment=None,
        schema=None,
    )
    op.create_index(
        op.f("ix_training_task_submissions_task_student"),
        "training_task_submissions",
        ["task_id", "student_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_training_task_submissions_completed_at"),
        "training_task_submissions",
        ["completed_at"],
        unique=False,
    )
    op.alter_column(
        "training_task_submissions",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=False,
        comment=None,
        existing_comment="更新时间",
    )
    op.alter_column(
        "training_task_submissions",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="创建时间",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="主键ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "training_task_submissions",
        "student_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="学生ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "task_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="任务ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "completed_at",
        existing_type=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="完成时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_task_submissions",
        "started_at",
        existing_type=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="开始时间",
        existing_nullable=True,
    )
    op.alter_column(
        "training_task_submissions",
        "completion_rate",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment=None,
        existing_comment="完成率",
        existing_nullable=False,
    )
    op.alter_column(
        "training_task_submissions",
        "score",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment=None,
        existing_comment="得分",
        existing_nullable=True,
    )
    op.alter_column(
        "training_task_submissions",
        "submission_data",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        comment=None,
        existing_comment="提交数据JSON",
        existing_nullable=False,
    )
    op.create_table_comment(
        "training_parameter_templates",
        "训练参数模板表 - 需求15验收标准2",
        existing_comment=None,
        schema=None,
    )
    op.create_index(
        op.f("ix_training_parameter_templates_is_default"),
        "training_parameter_templates",
        ["is_default"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_parameter_templates_is_active"),
        "training_parameter_templates",
        ["is_active"],
        unique=False,
    )
    op.create_index(
        op.f("ix_training_parameter_templates_created_by_active"),
        "training_parameter_templates",
        ["created_by", "is_active"],
        unique=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=False,
        comment=None,
        existing_comment="更新时间",
    )
    op.alter_column(
        "training_parameter_templates",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        comment=None,
        existing_comment="创建时间",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="主键ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "training_parameter_templates",
        "created_by",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="创建者ID",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "is_active",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="是否激活",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "is_default",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="是否为默认模板",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "config",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        comment=None,
        existing_comment="训练参数配置JSON",
        existing_nullable=False,
    )
    op.alter_column(
        "training_parameter_templates",
        "description",
        existing_type=sa.TEXT(),
        comment=None,
        existing_comment="模板描述",
        existing_nullable=True,
    )
    op.alter_column(
        "training_parameter_templates",
        "name",
        existing_type=sa.VARCHAR(length=100),
        comment=None,
        existing_comment="模板名称",
        existing_nullable=False,
    )
    op.drop_column("teacher_profiles", "qualification_notes")
    op.drop_column("teacher_profiles", "next_review_date")
    op.drop_column("teacher_profiles", "last_review_date")
    op.drop_column("teacher_profiles", "qualification_status")
    op.drop_column("teacher_profiles", "last_salary_date")
    op.drop_column("teacher_profiles", "total_salary_paid")
    op.drop_column("teacher_profiles", "monthly_salary")
    op.drop_column("teacher_profiles", "hourly_rate")
    op.drop_column("teacher_profiles", "total_evaluations")
    op.drop_column("teacher_profiles", "monthly_hours")
    op.drop_column("teacher_profiles", "contract_end_date")
    op.drop_column("teacher_profiles", "hire_date")
    op.drop_column("teacher_profiles", "teaching_status")
    op.drop_column("student_profiles", "notes")
    op.drop_column("student_profiles", "parent_email")
    op.drop_column("student_profiles", "parent_phone")
    op.drop_column("student_profiles", "parent_name")
    op.drop_column("student_profiles", "total_exercises")
    op.drop_column("student_profiles", "best_score")
    op.drop_column("student_profiles", "average_score")
    op.drop_column("student_profiles", "graduation_date")
    op.drop_column("student_profiles", "enrollment_date")
    op.drop_column("student_profiles", "learning_status")
    op.alter_column(
        "courses",
        "status",
        existing_type=sa.Enum(
            "PREPARING",
            "UNDER_REVIEW",
            "APPROVED",
            "PUBLISHED",
            "SUSPENDED",
            "ARCHIVED",
            "DELETED",
            name="coursestatus",
        ),
        type_=sa.VARCHAR(length=20),
        existing_comment="课程状态",
        existing_nullable=False,
    )
    op.drop_column("courses", "share_level")
    op.drop_table("equipment_maintenance_records")
    op.drop_table("equipment")
    op.drop_table("classroom_schedules")
    op.drop_table("class_resource_history")
    op.drop_index(
        op.f("ix_attendance_records_student_id"), table_name="attendance_records"
    )
    op.drop_index(
        op.f("ix_attendance_records_class_id"), table_name="attendance_records"
    )
    op.drop_index(
        op.f("ix_attendance_records_attendance_date"), table_name="attendance_records"
    )
    op.drop_table("attendance_records")
    op.drop_table("teacher_course_permissions")
    op.drop_table("rule_monitoring")
    op.drop_table("rule_exemption_requests")
    op.drop_table("rule_execution_logs")
    op.drop_table("invoices")
    op.drop_table("course_versions")
    op.drop_table("course_templates")
    op.drop_table("course_assignment_history")
    op.drop_table("classrooms")
    op.drop_table("user_roles")
    op.drop_index(op.f("ix_teaching_records_teacher_id"), table_name="teaching_records")
    op.drop_table("teaching_records")
    op.drop_index(
        op.f("ix_student_enrollment_changes_student_id"),
        table_name="student_enrollment_changes",
    )
    op.drop_index(
        op.f("ix_student_enrollment_changes_change_date"),
        table_name="student_enrollment_changes",
    )
    op.drop_table("student_enrollment_changes")
    op.drop_index(op.f("ix_salary_records_teacher_id"), table_name="salary_records")
    op.drop_table("salary_records")
    op.drop_table("rule_configurations")
    op.drop_table("role_permissions")
    op.drop_index(
        op.f("ix_qualification_reviews_teacher_id"), table_name="qualification_reviews"
    )
    op.drop_table("qualification_reviews")
    op.drop_index(op.f("ix_login_sessions_user_id"), table_name="login_sessions")
    op.drop_index(op.f("ix_login_sessions_session_token"), table_name="login_sessions")
    op.drop_table("login_sessions")
    op.drop_index(
        op.f("ix_intelligent_training_loops_training_type"),
        table_name="intelligent_training_loops",
    )
    op.drop_index(
        op.f("ix_intelligent_training_loops_student_id"),
        table_name="intelligent_training_loops",
    )
    op.drop_table("intelligent_training_loops")
    op.drop_table("buildings")
    op.drop_index(op.f("ix_billing_records_student_id"), table_name="billing_records")
    op.drop_index(op.f("ix_billing_records_billing_date"), table_name="billing_records")
    op.drop_table("billing_records")
    op.drop_index(op.f("ix_roles_name"), table_name="roles")
    op.drop_index(op.f("ix_roles_code"), table_name="roles")
    op.drop_table("roles")
    op.drop_index(op.f("ix_permissions_name"), table_name="permissions")
    op.drop_index(op.f("ix_permissions_module"), table_name="permissions")
    op.drop_index(op.f("ix_permissions_code"), table_name="permissions")
    op.drop_table("permissions")
    op.drop_index(op.f("ix_login_attempts_username"), table_name="login_attempts")
    op.drop_index(op.f("ix_login_attempts_success"), table_name="login_attempts")
    op.drop_index(op.f("ix_login_attempts_ip_address"), table_name="login_attempts")
    op.drop_index(op.f("ix_login_attempts_attempted_at"), table_name="login_attempts")
    op.drop_table("login_attempts")
    op.drop_table("campuses")
    # ### end Alembic commands ###
